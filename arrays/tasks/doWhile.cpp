#include <iostream>
using namespace std;

int main() {
    // то же самое что и в предыдущем примере, но несколько отличий
    // вводим предписанное значение ввода
    int input = 4, cnt = 0, a[100];
    // используем цикл "do{}while()" вместо "while(){}"
    do {
        a[cnt++] = input;
        cin >> input;
        // условие пишем не в условном операторе "if()", 
        //     а в самом цикличном операторе "do{}while()"
    } while (input != 4);

    /* можно засчитать сдвиг вправо на 1 число, тогда
     * индексы начинаем с единицы, так как первым значением станет 4
     * все алгоритмы будут работать, важно лишь помнить,
     * что индексы начинаем с единицы
     */
    for (int i = 1; i < cnt; i++) {
        if (i > 1) {
            cout << ", ";
        }
        cout << a[i];
    }
    cout << endl;

    /* НО! использовать смещение индексов не красиво
     * стандартно индексы начинаются с нуля, чтобы не путать людей
     * можно написать функцию, которая сдвинет 
     * все элементы на один шаг в лево
     */
    for (int i = 0; i < cnt - 1; i++) {
        // каждый элемент принимает значение следующего
        a[i] = a[i + 1];
        /* например был массив c четверной в начале
         * 0) {4, 1, 2, 3, 5, 6, 7}
         * по шагово изменения будут выглядеть так:
         * 1) {1, 1, 2, 3, 5, 6, 7}
         * 2) {1, 2, 2, 3, 5, 6, 7}
         * 3) {1, 2, 3, 3, 5, 6, 7}
         * 4) {1, 2, 3, 5, 5, 6, 7}
         * 5) {1, 2, 3, 5, 6, 6, 7}
         * 6) {1, 2, 3, 5, 6, 7, 7}
         */
    }   
    // уменьшаем размер массива на 1
    // 7) {1, 2, 3, 5, 6, 7}
    cnt--;

    // используем стандартные приемы
    for (int i = 0; i < cnt; i++) {
        if (i > 0) {
            cout << ", ";
        }
        cout << a[i];
    }
    cout << endl;
    
    int max_elem = a[0], min_elem = a[0];
    int max_index = 0, min_index = 0;
    for (int i = 0; i < cnt; i++) {
        if (max_elem < a[i]) {
            max_elem = a[i];
            max_index = i;
        }
        if (min_elem > a[i]) {
            min_elem = a[i];
            min_index = i;
        }
    }
    cout << "Max: a[" << max_index << "] = " << max_elem << endl;
    cout << "Min: a[" << min_index << "] = " << min_elem << endl;
    return 0;
}