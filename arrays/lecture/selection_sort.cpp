/**
 * Данная программа демонстрирует алгоритм сортировки одномерного массива,
 * который называется Selection sort (сортировка выбором).
 */
#include <iostream>
#include <string>
using namespace std;
int main()
{
    setlocale(LC_ALL, "Russian");

    //Создаем и заполняем с клавитуры тестовый массив.
    cout<<"Введите размер Вашего массива: ";
    int aSize;
    cin>>aSize;
    int a[100];

    cout<<"Введите с клавиатуры "<<aSize<<" целых чисел: "<<endl;
    for(int i = 0; i < aSize; i++)
        cin>>a[i];

    cout<<"\nМассив целых чисел до сортировки:"<<endl;
    for(int i = 0; i < aSize; i++)
        cout<<a[i]<<" ";
    /*
     * Сортировка выбором работает следующем образом.
     *
     * Изначально алгоритм рассматривает самый первый элемент массива и
     * начинает проходиться по всему массива, начиная с элемента,
     * который стоит ПОСЛЕ рассматриваемого. (Т.е. если он рассматривает 0-ой элемент массива,
     * то прохождение он начнёт с первого)
     *
     * Алгоритм имеет в своём распоряжении своеобразные "маркер", которым он помечает САМЫЙ маленький элемент,
     * который он найдет при очередной прохождении. (При сортировке по возрастанию).
     *
     * То есть если он начал прохождение с 1-ого элемента, он сравнивает 1-ый элемент с 0-ым.
     * Предположим 1-ый элемент оказался меньше, чем 0-ой.
     * "Маркер" ставится на 1-ый элемент.
     *
     * Далее он сравнивает следющие элементы с тем элементом, который помечен маркером.
     * Если находится элемент, который ЕЩЁ меньше "маркированного", то "маркер"
     * переходит к этому новому маленькому элементу.
     *
     * В итоге после первого прохождения будет найдет САМЫЙ маленький элемент во всём массиве.
     * (Опять таки предложение выше относится к сортровке по возрастанию.
     * При сортировке по убыванию будет искаться самый большой элемент.)
     * И этот САМЫЙ МАЛЕНЬКИЙ элемент будет поменят местами с 0-ым, который, напомню
     * и рассматривается при первом прохождении.
     *
     * В итоге после первого прохождения САМЫЙ МАЛЕНЬКИЙ элемент занял своё место в самом
     * начале массива.
     * И следующее прохождение уже начнётся со следующего элемента, т.к. 0-ой рассматривать
     * уже нет смысла, ибо он уже самый маленький и стоит на своём месте.
     *
     * И так далее.
     * Для полной картины смотрите код ниже.
     */
    for (int i = 0; i < aSize - 1; i++) {   // Первый цикл проходится по всем элементам массива, начиная с 0-ого и до ПРЕДпоследнего
        int best = i;                       // Назначается "маркер"
        for (int j = i + 1; j < aSize; j++) {   // Начинается прохождение по всем элементам, начиная со следующего после очередного рассматриваемого в наружнем цикле
            if (a[j] < a[best]) {               // Если находится элемент меньше, чем "маркированный"
                best = j;                       // Маркер переходит к этому новому "более подходящему кандидату"
            }
        }

        if (best != i) {        // Далее происходит swap элемента, рассматриваемого в наружнем цикле
            int temp = a[i];    // на тот элемент, что в конце прохода оказался помеченным "маркером"
            a[i] = a[best];     // как самый маленький (в данной сортировке по возрастанию.
            a[best] = temp;
        }
    }

    cout<<"\n\nМассив целых чисел после сортировки по возрастанию:"<<endl;
    for(int i = 0; i < aSize; i++)
        cout<<a[i]<<" ";

    cout<<"\n\nВведите размер Вашего массива строк: ";
    int strArrSize;
    cin>>strArrSize;
    string strArr[100];

    cout<<"Введите с клавиатуры "<<strArrSize<<" строк (слов): "<<endl;
    for(int i = 0; i < strArrSize; i++)
        cin>>strArr[i];

    cout<<"\nМассив строк до сортировки:"<<endl;
    for(int i = 0; i < strArrSize; i++)
        cout<<strArr[i]<<endl;

    for (int i = 0; i < strArrSize - 1; i++) {
        int best = i;
        for (int j = i + 1; j < strArrSize; j++) {
            if (strArr[j] < strArr[best]) {
                best = j;
            }
        }

        if (best != i) {
            string temp = strArr[i];
            strArr[i] = strArr[best];
            strArr[best] = temp;
        }
    }

    cout<<"\n\nМассив строк после сортировки по возрастанию:"<<endl;
    for(int i = 0; i < strArrSize; i++)
        cout<<strArr[i]<<endl;
    //system("pause");
}