/**
 * Существует 2 формы записи increment (с decrement аналогично):
 *
 * 1) Постфиксная форма записи
 * a++
 * Означает, что 1 прибавится НЕ сразу, а только после совершения ближайшей операции.
 *
 * 2) Префиксная форма записи
 * ++a
 * Означает, что 1 прибавится СРАЗУ же, как только вы увидели такую запись.
 *
 */

#include <iostream>
using namespace std;

int main()
{
    /* В качестве пример рассмотрим следующую ситуацию, объявляем переменную a, задаём ей значение 5.
     * Дальше идёт выражение, необходимо посчитать, что выведется в результате.
     * Затем идёт вывод окончательного значения переменной a, чему оно будет равно? */

    int a = 5;
    cout << "a++ + 10 + a + a++ + ++a = " << a++ + 10 + a + a++ + ++a << endl;
    cout << "a = " << a << endl << endl;

    /* Считаем:
     * Возьмём для начала первую часть выражения: "a++ + 10"
     * Сейчас значение переменной a ещё 5, так как 1 прибавится ТОЛЬКО ПОСЛЕ ближайшей операции, а ближайшая
     * операция - это прибавление 10. То есть переменная a пока равна 5, к ней прибавляется 10.
     * Получаем 15.
     * И только ТЕПЕРЬ значение переменной a увеличилось на 1 и теперь переменная a стала равна 6.
     * Дальше идёт "+ a".
     * Мы знаем, что значение переменной a на данный момент равно 6. Предыдущая часть "a++ + 10" дала в
     * резульате 15. Получается 15 + 6 = 21.
     * То есть часть "a++ + 10 + a" даёт в результате 21. Нынешнее значение переменной a всё ещё 6.
     * Дальше идёт "+ a++".
     * То есть к 21 прибавится 6 (!!!), ни в коем случае не 7, то как "++", который стоит после a сработает
     * НЕ СРАЗУ, а только ПОТОМ. То есть к 21 прибавится a, когда a ещё 6, получится 27 и ТОЛЬКО ПОСЛЕ этого
     * значение переменной a станет равно 7.
     * То есть часть "a++ + 10 + a + a++" даёт в результате 27. Нынешнее значение переменной a равно 7.
     * Дальше последняя часть "+ ++a".
     * Тут уже идёт ПРЕфиксная форма записи, а это означает, что значение переменной a УЖЕ увеличилось на 1, то есть
     * переменная a УЖЕ равно 8.
     * И получается, что к 27 прибавляем 8, получаем 35. И конечное значение переменной a равно 8.
     * В итоге: на консоль выведется:
     * a++ + 10 + a + a++ + ++a = 35
     * a = 8 */

    int b = 5;
    cout << "++b + 10 + b + ++b + b++ = " << ++b + 10 + b + ++b + b++ << endl;
    cout << "b = " << b << endl;

    /* После выполнения второй части этой программы с переменной b на консоль выведется:
     * ++b + 10 + b + ++b + b++ = 36
     * b = 8
     * Также как мы разобрали выражение с переменной a, разберите это выражение с переменной b и проанализируйте
     * полученный результат, а также подумайте, почему в результате этого выражение получилось 36, а не 35, как в
     * случае с выражением с переменной a*/

    return 0;

}